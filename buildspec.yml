version: 0.2
env:
  secrets-manager:
    DB_USER: "endgame:db_user"
    DB_PASS: "endgame:db_pass"
    DB_HOST: "endgame:db_host"
    DB: "endgame:db"
    BACKEND_URL: "endgame:backend_url"
    FRONTEND_REPO_URI: "endgame:fronted_repo_uri"
    REGION: "endgame:region"
    BACKEND_REPO_URI: "endgame:backend_repo_uri"
    FRONTEND_TASK_FAMILY: "endgame:frontend_task_family"
    BACKEND_TASK_FAMILY: "endgame:backend_task_family"
    SECRET_NAME: "endgame:secret_name"
    ASSUME_ROLE_ARN: "endgame:assume_role_arn"
    SVC_ACC_ROLE_ARN: "endgame:svc_acc_role_arn"
    CLUSTER_NAME: "endgame:cluster_name"
    GIT_USER: "endgame:git_user"
    GIT_PAT: "endgame:git_pat"
    GIT_REPO: "endgame:git_repo"

phases:
  install:
    commands:
    - sudo yum install docker git -y
    - sudo yum install gettext -y
    # - curl -O https://s3.us-west-2.amazonaws.com/amazon-eks/1.23.15/2023-01-11/bin/linux/amd64/kubectl
  # - chmod +x kubectl
  # - sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
  pre_build:
    commands:
    - aws sts get-caller-identity
    - cd frontend
    - echo "------ logging into the python ecr repo ------"
    - aws ecr get-login-password --region ap-south-1 |sudo docker login --username AWS --password-stdin 533267334695.dkr.ecr.ap-south-1.amazonaws.com
    - echo "------ building the docker images ------"
    - sudo docker build -t frontend -f Dockerfile-modified .
    - sudo docker tag frontend ${FRONTEND_REPO_URI}:${CODEBUILD_BUILD_NUMBER}
    - sudo docker tag frontend ${FRONTEND_REPO_URI}:latest
    - cd ../backend/
    - sudo docker build -t backend .
    - sudo docker tag backend ${BACKEND_REPO_URI}:${CODEBUILD_BUILD_NUMBER}
    - sudo docker tag backend ${BACKEND_REPO_URI}:latest


    - echo "------ pushing docker images ------"
    - aws ecr get-login-password --region ${REGION} |sudo docker login --username AWS --password-stdin ${FRONTEND_REPO_URI}
    - sudo docker push ${FRONTEND_REPO_URI}:${CODEBUILD_BUILD_NUMBER}
    - sudo docker push ${FRONTEND_REPO_URI}:latest


    - aws ecr get-login-password --region ${REGION} |sudo docker login --username AWS --password-stdin ${BACKEND_REPO_URI}
    - sudo docker push ${BACKEND_REPO_URI}:${CODEBUILD_BUILD_NUMBER}
    - sudo docker push ${BACKEND_REPO_URI}:latest

  build:
    commands:

    # - echo "------ getting the temporary creds ------"
    # - CREDS=$(aws sts assume-role --role-arn ${ASSUME_ROLE_ARN} --role-session-name codebuild --duration-seconds 900)
    # - export AWS_ACCESS_KEY_ID="$(echo ${CREDS} | jq -r '.Credentials.AccessKeyId')"
    # - export AWS_SECRET_ACCESS_KEY="$(echo ${CREDS} | jq -r '.Credentials.SecretAccessKey')"
    # - export AWS_SESSION_TOKEN="$(echo ${CREDS} | jq -r '.Credentials.SessionToken')"
    # - export AWS_EXPIRATION=$(echo ${CREDS} | jq -r '.Credentials.Expiration')

    # - echo "------ logging into eks ------"
    # - aws eks update-kubeconfig --name ${CLUSTER_NAME} --region ${REGION}
    - echo "------ changing the providerclass_new_tmp.yml file values ------"
    - cd ../
    - envsubst < providerclass_tmp.yml > manifests/providerclass.yml

    - echo "------ changing the backend-deploy_tmp.yml file values ------"
    - envsubst < backend-deploy_tmp.yml > manifests/backend-deploy.yml

    - echo "------ changing the frontend-deploy_tmp.yml file values ------"
    - envsubst < frontend-deploy_tmp.yml > manifests/frontend-deploy.yml

    - echo "------ changing the serviceaccount_tmp.yml file values ------"
    - envsubst < serviceaccount_tmp.yml > manifests/serviceaccount.yml

  post_build:
    commands:
    # - kubectl apply -f providerclass.yml
    # - kubectl apply -f serviceaccount.yml
    # - kubectl apply -f backend-deploy.yml
    # - kubectl apply -f backend-svc.yml
    # - kubectl apply -f frontend-deploy.yml
    # - kubectl apply -f frontend-svc.yml

    - echo "------ setting the github origin ------"
    # - echo "------ applying the manifest files ------"
    - git config --global user.name sumzz
    - git config --global user.email test@sumzz.online
    - git remote set-url origin https://${GIT_USER}:${GIT_PAT}@github.com/${GIT_USER}/${GIT_REPO}
    # check the PAT expiry time before running 
    - git add .
    - git commit -m "pipeline-commit-${CODEBUILD_BUILD_NUMBER}"
    - git push origin

